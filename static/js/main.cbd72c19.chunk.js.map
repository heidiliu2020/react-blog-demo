{"version":3,"sources":["contexts.js","utils.js","WebAPI.js","imgs/bg_1.jpg","constants/style.js","components/Header/Header.js","components/Footer/Footer.js","components/Loading/Loading.js","pages/HomePage/HomePage.js","pages/LoginPage/LoginPage.js","pages/RegisterPage/RegisterPage.js","pages/AboutPage/AboutPage.js","components/Pagination/Pagination.js","pages/PostListPage/PostListPage.js","pages/PostPage/PostPage.js","pages/NewPostPage/NewPostPage.js","components/App/App.js","index.js"],"names":["AuthContext","createContext","LoadingContext","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","getLimitPosts","page","limit","fetch","then","res","json","getMe","headers","authorization","MEDIA_QUERY_MD","HeaderContainer","styled","div","Brand","NavbarList","ul","StyledLink","NavLink","props","activeClassName","LoadingGetMe","Header","isLoadingGetMe","useContext","user","setUser","location","useLocation","history","useHistory","to","replace","exact","onClick","pathname","push","Root","FooterContainer","Footer","href","target","LoadingWapper","Loading","size","color","PostsListContainer","PostsListTitle","PostContainer","PostHeader","PostTitle","Link","PostDate","PostBody","ReadMore","PostList","post","id","title","Date","createdAt","toLocaleDateString","body","HomePage","isLoading","setIsLoading","useState","posts","setPosts","useEffect","map","LoginForm","form","LoginTitle","LoginInput","LoginSubmit","LinkToRegister","ErrorMessage","SubmitLoading","LoginPage","username","setUsername","password","setPassword","errorMessage","setErrorMessage","handleInputFocus","onSubmit","e","preventDefault","method","JSON","stringify","login","data","ok","message","response","toString","value","onChange","onFocus","type","RegisterForm","RegisterTitle","RegisterInput","RegisterSubmit","LinkToLogin","RegisterPage","nickname","setNickname","register","AboutContainter","AboutTitle","h2","AboutContent","AboutPage","PaginationContainer","PageButton","button","className","Pagination","totalPages","currentPage","setCurrentPage","current","handlePageClick","PostRight","PostDeleteButton","handleDeletePost","userId","PostListPage","useRef","pages","i","getPages","Math","ceil","length","deletePost","catch","err","console","log","PostAuthor","PostPage","setPost","useParams","getPost","toLocaleString","NewPostForm","NewPostLable","NewPostTitleInput","input","NewPostTextArea","textarea","NewPostSubmit","NewPostLoading","NewPostPage","setTitle","setBody","addNewPost","rows","BackgroundImage","img","App","setLoadingGetMe","Provider","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cbd72c19.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\n// 初始值為 null\nexport const AuthContext = createContext(null);\nexport const LoadingContext = createContext(null);\n","const TOKEN_NAME = \"token\";\n\nexport const setAuthToken = (token) => {\n  localStorage.setItem(TOKEN_NAME, token);\n};\n\nexport const getAuthToken = () => {\n  return localStorage.getItem(TOKEN_NAME);\n};\n\nexport const getPages = (totalPages) => {\n  let pages = [];\n  for (let i = 1; i <= totalPages; i++) {\n    pages.push(i);\n  }\n  return pages;\n};\n","import { getAuthToken } from \"./utils\";\n\nconst BASE_URL = \"https://student-json-api.lidemy.me\";\n\n// 讀取所有文章\nexport const getPosts = () =>\n  fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then((res) =>\n    res.json()\n  );\n\n// 讀取單篇文章\nexport const getPost = (id) =>\n  fetch(`${BASE_URL}/posts?id=${id}&_expand=user`).then((res) => res.json());\n\n// 讀取最新五篇文章\nexport const getFirstFivePosts = () =>\n  fetch(`${BASE_URL}/posts?_limit=5&_sort=createdAt&_order=desc`).then((res) =>\n    res.json()\n  );\n\n// 依照X頁數，讀取Y篇文章\nexport const getLimitPosts = (page, limit) =>\n  fetch(\n    `${BASE_URL}/posts?_page=${page}&_limit=${limit}&_sort=createdAt&_order=desc`\n  ).then((res) => res.json());\n\n// 刪除文章\nexport const deletePost = (id) => {\n  return fetch(\"https://student-json-api.lidemy.me/posts/\" + id, {\n    method: \"DELETE\",\n  }).then((res) => res.json());\n};\n\n// 發布文章\nexport const addNewPost = (title, body) => {\n  // 從 localStorage 拿取 token\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts`, {\n    method: \"POST\",\n    headers: {\n      authorization: `Bearer ${token}`,\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then((res) => res.json());\n};\n\n// 註冊\nexport const register = ({ username, password, nickname }) => {\n  return fetch(`${BASE_URL}/register`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      nickname,\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\n// 登入\nexport const login = ({ username, password }) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\n// 身分驗證\nexport const getMe = () => {\n  // 從 localStorage 拿取 token\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then((res) => res.json());\n};\n","export default __webpack_public_path__ + \"static/media/bg_1.4c8948af.jpg\";","export const MEDIA_QUERY_LG = \"@media screen and (max-width: 1000px)\";\nexport const MEDIA_QUERY_MD = \"@media screen and (max-width: 768px)\";\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { Link, NavLink, useHistory, useLocation } from \"react-router-dom\";\n\nimport { AuthContext, LoadingContext } from \"../../contexts\";\nimport { setAuthToken } from \"../../utils\";\nimport { MEDIA_QUERY_MD } from \"../../constants/style\";\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  box-shadow: 0px 0px 8px rgb(199, 197, 197);\n  padding: 0 32px;\n  background: #fff;\n\n  ${MEDIA_QUERY_MD} {\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n  }\n`;\n\nconst Brand = styled.div`\n  font-size: 28px;\n  white-space: nowrap;\n  font-weight: 700;\n\n  /* 可選取子層的 Link 元素 */\n  a {\n    text-decoration: none;\n    color: #333;\n    padding: 8px;\n  }\n\n  ${MEDIA_QUERY_MD} {\n    font-size: 24px;\n    padding: 6px 0;\n  }\n`;\n\nconst NavbarList = styled.ul`\n  display: flex;\n  align-items: center;\n  list-style-type: none;\n  text-decoration: none;\n  margin: 0;\n  padding: 0;\n\n  ${MEDIA_QUERY_MD} {\n    font-size: 24px;\n    justify-content: space-evenly;\n  }\n`;\n\nconst StyledLink = styled(NavLink)`\n  height: 58px;\n  width: 82px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-decoration: none;\n  color: #666;\n\n  /* activeClassName: 設置選中樣式，預設為 active */\n  &.${(props) => props.activeClassName} {\n    background: #eee;\n  }\n\n  ${MEDIA_QUERY_MD} {\n    font-size: 18px;\n    height: 32px;\n\n    &.${(props) => props.activeClassName} {\n      background: #fff;\n      color: #999;\n    }\n  }\n`;\n\nconst LoadingGetMe = styled.div`\n  height: 58px;\n  width: 164px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #666;\n`;\n\nexport default function Header() {\n  const { isLoadingGetMe } = useContext(LoadingContext);\n  const { user, setUser } = useContext(AuthContext);\n  const location = useLocation();\n\n  const history = useHistory();\n\n  const handleLogout = () => {\n    setAuthToken(\"\");\n    setUser(null);\n    if (location.pathname !== \"/\") {\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <HeaderContainer>\n      <Brand>\n        {/* 加上 replace: 避免出現錯誤 -> \"Hash history cannot PUSH the same path\" */}\n        <Link to=\"/\" replace>\n          Heidi's Blog\n        </Link>\n      </Brand>\n      <NavbarList>\n        <StyledLink exact to=\"/about\" replace activeClassName=\"active\">\n          關於我\n        </StyledLink>\n        <StyledLink to=\"/post-list/\" replace activeClassName=\"active\">\n          文章列表\n        </StyledLink>\n        {isLoadingGetMe ? (\n          <LoadingGetMe>資料讀取中...</LoadingGetMe>\n        ) : (\n          <>\n            {!user && (\n              <StyledLink to=\"/register\" replace activeClassName=\"active\">\n                註冊\n              </StyledLink>\n            )}\n            {!user && (\n              <StyledLink to=\"/login\" replace activeClassName=\"active\">\n                登入\n              </StyledLink>\n            )}\n            {user && (\n              <StyledLink to=\"/new-post\" replace activeClassName=\"active\">\n                發布文章\n              </StyledLink>\n            )}\n            {user && (\n              <StyledLink to=\"\" replace onClick={handleLogout}>\n                登出\n              </StyledLink>\n            )}\n          </>\n        )}\n      </NavbarList>\n    </HeaderContainer>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Root = styled.div``;\n\nconst FooterContainer = styled.div`\n  text-align: center;\n  padding: 6px;\n  letter-spacing: 1px;\n  background: #000;\n  color: #eee;\n\n  & a {\n    text-decoration: none;\n    color: #338ccc;\n  }\n  & a:hover {\n    color: #eee;\n  }\n`;\n\nexport default function Footer() {\n  return (\n    <Root>\n      <FooterContainer>\n        © 2020{\" \"}\n        <a href=\"https://github.com/heidiliu2020\" target=\"_blank\">\n          Heidi\n        </a>\n        {\" ♥ \"}\n        Powered by React\n      </FooterContainer>\n    </Root>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { PuffLoader } from \"react-spinners\";\n\nconst LoadingWapper = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.6);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default function Loading() {\n  return (\n    <LoadingWapper>\n      <PuffLoader size={60} color={\"#4A90E2\"} />\n    </LoadingWapper>\n  );\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nimport { MEDIA_QUERY_MD } from \"../../constants/style\";\nimport { getFirstFivePosts } from \"../../WebAPI\";\nimport { LoadingContext } from \"../../contexts\";\nimport Loading from \"../../components/Loading\";\n\nconst Root = styled.div`\n  min-height: 100vh;\n`;\n\nconst PostsListContainer = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 40px 60px;\n  box-shadow: 0px 2px 12px rgba(0, 0, 0, 0.4);\n  border-radius: 10px;\n  background: rgba(246, 246, 246, 0.9);\n\n  ${MEDIA_QUERY_MD} {\n    margin: 30px auto;\n    padding: 30px;\n  }\n`;\n\nconst PostsListTitle = styled.div`\n  text-align: center;\n  font-size: 30px;\n  font-weight: 700;\n  color: #333;\n`;\n\nconst PostContainer = styled.div`\n  border-bottom: 1px solid rgba(0, 0, 0, 0.15);\n  padding: 20px 0;\n\n  ${MEDIA_QUERY_MD} {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`;\n\nconst PostHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst PostTitle = styled(Link)`\n  font-size: 24px;\n  font-weight: 700;\n  color: #333;\n  text-decoration: none;\n`;\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.5);\n`;\n\nconst PostBody = styled.div`\n  font-size: 20px;\n  letter-spacing: 3px;\n  line-height: 1.5;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 550px;\n  max-height: 100px;\n`;\n\nconst ReadMore = styled.div`\n  margin-top: 24px;\n  text-align: center;\n\n  a {\n    border-radius: 30px;\n    font-size: 16px;\n    padding: 8px 10px;\n    border: 1px solid #555;\n    background: #555;\n    color: #eee;\n    text-decoration: none;\n  }\n`;\n\nfunction PostList({ post }) {\n  return (\n    <PostContainer>\n      <PostHeader>\n        <PostTitle to={`/post/${post.id}`}>\n          [#{post.id}] {post.title}\n        </PostTitle>\n        <PostDate>{new Date(post.createdAt).toLocaleDateString()}</PostDate>\n      </PostHeader>\n      <PostBody>{post.body}</PostBody>\n    </PostContainer>\n  );\n}\n\nPostList.propTypes = {\n  post: PropTypes.object,\n};\n\nexport default function HomePage() {\n  const { isLoading, setIsLoading } = useContext(LoadingContext);\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getFirstFivePosts()\n      .then((posts) => setPosts(posts))\n      .then(() => {\n        setIsLoading(false);\n      });\n  }, [setIsLoading]);\n\n  return (\n    <Root>\n      {isLoading ? (\n        <Loading />\n      ) : (\n        <PostsListContainer>\n          <PostsListTitle>最新文章</PostsListTitle>\n          {posts && posts.map((post) => <PostList post={post} key={post.id} />)}\n          <ReadMore>\n            <Link to=\"/post-list\">查看更多</Link>\n          </ReadMore>\n        </PostsListContainer>\n      )}\n    </Root>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { login, getMe } from \"../../WebAPI\";\nimport { setAuthToken } from \"../../utils\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { AuthContext } from \"../../contexts\";\nimport { LoadingContext } from \"../../contexts\";\n\nconst Root = styled.div`\n  height: 100vh;\n`;\n\nconst LoginForm = styled.form`\n  max-width: 350px;\n  margin: 100px auto;\n  padding: 30px 50px;\n  box-shadow: 0px 2px 12px rgba(0, 0, 0, 0.4);\n  border-radius: 6px;\n  background: rgba(246, 246, 246, 0.9);\n  font-size: 18px;\n`;\n\nconst LoginTitle = styled.div`\n  font-size: 28px;\n  font-weight: 700;\n  margin-bottom: 28px;\n  text-align: center;\n`;\n\nconst LoginInput = styled.div`\n  margin-bottom: 28px;\n\n  & input {\n    width: 100%;\n    padding: 8px;\n    font-size: 18px;\n    outline: transparent;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    letter-spacing: 1.5px;\n    margin-top: 8px;\n  }\n`;\n\nconst LoginSubmit = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n\n  & button {\n    background: #555;\n    color: #eee;\n    outline: transparent;\n  }\n\n  & button,\n  a {\n    cursor: pointer;\n    border-radius: 20px;\n    font-size: 18px;\n    padding: 6px 20px;\n    border: 1px solid #555;\n  }\n`;\n\nconst LinkToRegister = styled(Link)`\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  background: #eee;\n  color: #555;\n`;\n\nconst ErrorMessage = styled.div`\n  margin-bottom: 16px;\n  color: #db4c3f;\n  font-weight: 700;\n`;\n\nconst SubmitLoading = styled.div`\n  font-weight: 700;\n  color: #555;\n  padding: 10px;\n`;\n\nexport default function LoginPage() {\n  const { isLoading, setIsLoading } = useContext(LoadingContext);\n  const { setUser } = useContext(AuthContext);\n  // 在 React 中 value 若是 undefined，等同於沒有傳 value\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n\n  // 阻止送出表單\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    login({ username, password }).then((data) => {\n      // 若 ok 為 0 代表錯誤\n      if (data.ok === 0) {\n        setIsLoading(false);\n        return setErrorMessage(data.message);\n      }\n      // 成功的話就把 token 存到 localStorage\n      setAuthToken(data.token);\n\n      getMe().then((response) => {\n        if (response.ok !== 1) {\n          setIsLoading(false);\n          // 在 getMe() 出錯代表還沒成功登入，因此要把 token 清空\n          setAuthToken(null);\n          setErrorMessage(response.toString());\n        }\n        setUser(response.data);\n        // 並導回首頁\n        history.push(\"/\");\n      });\n    });\n  };\n\n  const handleInputFocus = () => {\n    setErrorMessage(null);\n  };\n\n  const handleUsernameChange = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  return (\n    <Root>\n      <LoginForm onSubmit={handleSubmit}>\n        <LoginTitle>登入</LoginTitle>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n        <LoginInput>\n          username:\n          <input\n            value={username}\n            onChange={handleUsernameChange}\n            onFocus={handleInputFocus}\n          />\n        </LoginInput>\n        <LoginInput>\n          password:\n          <input\n            type=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n            onFocus={handleInputFocus}\n          />\n        </LoginInput>\n        <LoginSubmit>\n          {isLoading ? (\n            <SubmitLoading>資料驗證中...</SubmitLoading>\n          ) : (\n            <>\n              <LinkToRegister to=\"/register\">建立帳號</LinkToRegister>\n              <button>登入</button>\n            </>\n          )}\n        </LoginSubmit>\n      </LoginForm>\n    </Root>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { register, getMe } from \"../../WebAPI\";\nimport { setAuthToken } from \"../../utils\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { AuthContext } from \"../../contexts\";\nimport { LoadingContext } from \"../../contexts\";\n\nconst Root = styled.div`\n  height: 100vh;\n`;\n\nconst RegisterForm = styled.form`\n  max-width: 350px;\n  margin: 100px auto;\n  padding: 30px 50px;\n  box-shadow: 0px 2px 12px rgba(0, 0, 0, 0.4);\n  border-radius: 6px;\n  background: rgba(246, 246, 246, 0.9);\n  font-size: 18px;\n`;\n\nconst RegisterTitle = styled.div`\n  font-size: 28px;\n  font-weight: 700;\n  margin-bottom: 28px;\n  text-align: center;\n`;\n\nconst RegisterInput = styled.div`\n  margin-bottom: 28px;\n\n  & input {\n    width: 100%;\n    padding: 8px;\n    font-size: 18px;\n    outline: transparent;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    letter-spacing: 1.5px;\n    margin-top: 8px;\n  }\n`;\n\nconst RegisterSubmit = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n\n  & button {\n    background: #555;\n    color: #eee;\n    outline: transparent;\n  }\n\n  & button,\n  a {\n    cursor: pointer;\n    border-radius: 20px;\n    font-size: 18px;\n    padding: 6px 20px;\n    border: 1px solid #555;\n  }\n`;\n\nconst LinkToLogin = styled(Link)`\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  background: #eee;\n  color: #555;\n`;\n\nconst ErrorMessage = styled.div`\n  margin-bottom: 16px;\n  color: #db4c3f;\n  font-weight: 700;\n`;\n\nconst SubmitLoading = styled.div`\n  font-weight: 700;\n  color: #555;\n  padding: 10px;\n`;\n\nexport default function RegisterPage() {\n  const { isLoading, setIsLoading } = useContext(LoadingContext);\n  const { setUser } = useContext(AuthContext);\n  // 在 React 中 value 若是 undefined，等同於沒有傳 value\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [nickname, setNickname] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n\n  // 阻止送出表單\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    register({ username, password, nickname }).then((data) => {\n      // 若 ok 為 0 代表錯誤\n      if (data.ok === 0) {\n        setIsLoading(false);\n        return setErrorMessage(data.message);\n      }\n      // 成功的話就把 token 存到 localStorage\n      setAuthToken(data.token);\n\n      getMe().then((response) => {\n        if (response.ok !== 1) {\n          setIsLoading(false);\n          // 在 getMe() 出錯代表還沒成功登入，因此要把 token 清空\n          setAuthToken(null);\n          setErrorMessage(response.toString());\n        }\n        setUser(response.data);\n        // 並導回首頁\n        history.push(\"/\");\n      });\n    });\n  };\n\n  const handleInputFocus = () => {\n    setErrorMessage(null);\n  };\n\n  const handleNicknameChange = (e) => {\n    setNickname(e.target.value);\n  };\n\n  const handleUsernameChange = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  return (\n    <Root>\n      <RegisterForm onSubmit={handleSubmit}>\n        <RegisterTitle>註冊</RegisterTitle>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n        <RegisterInput>\n          nickname:\n          <input\n            value={nickname}\n            onChange={handleNicknameChange}\n            onFocus={handleInputFocus}\n          />\n        </RegisterInput>\n        <RegisterInput>\n          username:\n          <input\n            value={username}\n            onChange={handleUsernameChange}\n            onFocus={handleInputFocus}\n          />\n        </RegisterInput>\n        <RegisterInput>\n          password:\n          <input\n            type=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n            onFocus={handleInputFocus}\n          />\n        </RegisterInput>\n        <RegisterSubmit>\n          {isLoading ? (\n            <SubmitLoading>資料驗證中...</SubmitLoading>\n          ) : (\n            <>\n              <LinkToLogin to=\"/login\">已有帳號</LinkToLogin>\n              <button>註冊</button>\n            </>\n          )}\n        </RegisterSubmit>\n      </RegisterForm>\n    </Root>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Root = styled.div`\n  min-height: 100vh;\n`;\n\nconst AboutContainter = styled.div`\n  max-width: 500px;\n  margin: 100px auto;\n  padding: 40px;\n  box-shadow: 0px 2px 12px rgba(0, 0, 0, 0.4);\n  border-radius: 6px;\n  background: rgba(246, 246, 246, 0.9);\n`;\n\nconst AboutTitle = styled.h2`\n  text-align: center;\n  font-size: 28px;\n  font-weight: 700;\n  margin-bottom: 20px;\n`;\n\nconst AboutContent = styled.div`\n  line-height: 1.5;\n  font-size: 20px;\n`;\n\nexport default function AboutPage() {\n  return (\n    <Root>\n      <AboutContainter>\n        <AboutTitle>關於我</AboutTitle>\n        <AboutContent>\n          <p>\n            嗨，我是\n            Heidi，和阿爾卑斯山上的海蒂同名，夢想是走遍世界各處，留下自己的腳印。\n          </p>\n          <p>\n            因緣際會之下，從 2020 年 3 月開始學習寫程式，目前是 Lidemy\n            程式導師計畫第四期的學生，目標在明年初成功轉職成為一名前端工程師。\n          </p>\n        </AboutContent>\n      </AboutContainter>\n    </Root>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nimport { getLimitPosts } from \"../../WebAPI\";\n\nconst Root = styled.div``;\n\nconst PaginationContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 8px;\n  margin-top: 16px;\n`;\n\nconst PageButton = styled.button`\n  border: 1px solid #555;\n  border-radius: 50%;\n  padding: 8px 12px;\n  font-size: 16px;\n  outline: transparent;\n  cursor: pointer;\n  margin-right: 4px;\n\n  background: ${(props) =>\n    props.className === \"selected\"\n      ? \"rgba(0, 0, 0, 0.5)\"\n      : \"rgba(0, 0, 0, 0.1)\"};\n  color: ${(props) =>\n    props.className === \"selected\" ? \"#eee\" : \"rgba(0, 0, 0, 0.5)\"};\n\n  &:hover {\n    background: rgba(0, 0, 0, 0.5);\n    color: #eee;\n  }\n`;\n\nexport default function Pagination({\n  setPosts,\n  limit,\n  totalPages,\n  currentPage,\n  setCurrentPage,\n}) {\n  const handlePageClick = (page) => {\n    getLimitPosts(page, limit).then((posts) => setPosts(posts));\n    setCurrentPage(page);\n  };\n\n  return (\n    <Root>\n      <PaginationContainer>\n        {totalPages.current &&\n          totalPages.current.map((page) => (\n            <PageButton\n              key={page}\n              onClick={() => handlePageClick(page)}\n              className={currentPage === page ? \"selected\" : \"\"}\n            >\n              {page}\n            </PageButton>\n          ))}\n      </PaginationContainer>\n    </Root>\n  );\n}\n\nPagination.propTypes = {\n  setPosts: PropTypes.func,\n  limit: PropTypes.number,\n  totalPages: PropTypes.object,\n  currentPage: PropTypes.number,\n  setCurrentPage: PropTypes.func,\n};\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nimport { MEDIA_QUERY_MD } from \"../../constants/style\";\nimport { getPosts, getLimitPosts, deletePost } from \"../../WebAPI\";\nimport { getPages } from \"../../utils\";\nimport Pagination from \"../../components/Pagination\";\nimport { LoadingContext, AuthContext } from \"../../contexts\";\nimport Loading from \"../../components/Loading\";\n\nconst Root = styled.div`\n  min-height: 100vh;\n`;\n\nconst PostsListContainer = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 40px 60px;\n  box-shadow: 0px 2px 12px rgba(0, 0, 0, 0.4);\n  border-radius: 10px;\n  background: rgba(246, 246, 246, 0.9);\n`;\n\nconst PostsListTitle = styled.div`\n  text-align: center;\n  font-size: 30px;\n  font-weight: 700;\n  color: #333;\n`;\n\nconst PostContainer = styled.div`\n  border-bottom: 1px solid rgba(0, 0, 0, 0.15);\n  padding: 30px 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-weight: 700;\n\n  ${MEDIA_QUERY_MD} {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`;\n\nconst PostTitle = styled(Link)`\n  font-size: 24px;\n  color: #333;\n  text-decoration: none;\n\n  ${MEDIA_QUERY_MD} {\n    margin-bottom: 8px;\n  }\n`;\n\nconst PostRight = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.5);\n  margin-left: 8px;\n`;\n\nconst PostDeleteButton = styled.button`\n  color: white;\n  background-color: #db4c3f;\n  border: 1px solid transparent;\n  border-radius: 20px;\n  font-size: 14px;\n  width: 46px;\n  height: 26px;\n  cursor: pointer;\n`;\n\nfunction PostList({ post, handleDeletePost }) {\n  const { user } = useContext(AuthContext);\n\n  return (\n    <PostContainer>\n      <PostTitle to={`/post/${post.id}`}>\n        [#{post.id}] {post.title}\n      </PostTitle>\n      <PostRight>\n        {user.id === post.userId && (\n          <PostDeleteButton\n            onClick={() => {\n              handleDeletePost(post.id);\n            }}\n          >\n            刪除\n          </PostDeleteButton>\n        )}\n        <PostDate>{new Date(post.createdAt).toLocaleDateString()}</PostDate>\n      </PostRight>\n    </PostContainer>\n  );\n}\n\nPostList.propTypes = {\n  post: PropTypes.object,\n  handleDeletePost: PropTypes.func,\n};\n\nexport default function PostListPage() {\n  const { isLoading, setIsLoading } = useContext(LoadingContext);\n\n  const [posts, setPosts] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const totalPages = useRef();\n  const limit = 5;\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPosts().then((posts) => {\n      // 讀取留言來計算總頁數\n      totalPages.current = getPages(Math.ceil(posts.length / limit));\n      // 讀取第一頁文章\n      getLimitPosts(1, limit)\n        .then((posts) => setPosts(posts))\n        .then(() => {\n          setIsLoading(false);\n        });\n    });\n  }, [setIsLoading]);\n\n  const handleDeletePost = (id) => {\n    setIsLoading(true);\n    deletePost(id)\n      .then(() => {\n        // 刪除後重新讀取第一頁文章\n        getLimitPosts(1, limit).then((posts) => setPosts(posts));\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .then(setIsLoading(false));\n  };\n\n  return (\n    <Root>\n      {isLoading ? (\n        <Loading />\n      ) : (\n        <PostsListContainer>\n          <PostsListTitle>文章列表</PostsListTitle>\n          {posts.map((post) => (\n            <PostList\n              post={post}\n              key={post.id}\n              handleDeletePost={handleDeletePost}\n            />\n          ))}\n          <Pagination\n            totalPages={totalPages}\n            limit={limit}\n            setPosts={setPosts}\n            currentPage={currentPage}\n            setCurrentPage={setCurrentPage}\n          />\n        </PostsListContainer>\n      )}\n    </Root>\n  );\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { useParams } from \"react-router-dom\";\n\nimport { MEDIA_QUERY_MD } from \"../../constants/style\";\nimport { getPost } from \"../../WebAPI\";\nimport { LoadingContext } from \"../../contexts\";\nimport Loading from \"../../components/Loading\";\n\nconst Root = styled.div`\n  min-height: 100vh;\n`;\n\nconst PostContainer = styled.div`\n  padding: 60px;\n  max-width: 900px;\n  margin: 00px auto;\n  box-shadow: 0px 2px 12px rgba(0, 0, 0, 0.4);\n  border-radius: 6px;\n  background: rgba(246, 246, 246, 0.9);\n\n  ${MEDIA_QUERY_MD} {\n    padding: 40px 20px;\n  }\n`;\n\nconst PostTitle = styled.div`\n  font-size: 36px;\n  font-weight: 700;\n`;\n\nconst PostHeader = styled.div`\n  margin: 16px 0;\n  padding: 8px 0;\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  font-size: 16px;\n  color: rgba(0, 0, 0, 0.4);\n\n  & div {\n    margin-top: 8px;\n  }\n`;\n\nconst PostAuthor = styled.div``;\n\nconst PostDate = styled.div``;\n\nconst PostBody = styled.div`\n  font-size: 20px;\n  letter-spacing: 3px;\n  line-height: 1.5;\n  word-break: break-all;\n  white-space: pre-line;\n`;\n\nexport default function PostPage() {\n  const { isLoading, setIsLoading } = useContext(LoadingContext);\n  const [post, setPost] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPost(id)\n      .then((post) => setPost(post[0]))\n      .then(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <Root>\n      {isLoading ? (\n        <Loading />\n      ) : (\n        <PostContainer>\n          {/* post &&: 確認陣列裡面有東西才會執行 */}\n          <PostTitle>{post && post.title}</PostTitle>\n          <PostHeader>\n            <PostAuthor>作者：{post && post.user.username}</PostAuthor>\n            <PostDate>\n              時間：{post && new Date(post.createdAt).toLocaleString()}\n            </PostDate>\n          </PostHeader>\n          <PostBody>{post && post.body}</PostBody>\n        </PostContainer>\n      )}\n    </Root>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { MEDIA_QUERY_MD } from \"../../constants/style\";\nimport { addNewPost } from \"../../WebAPI\";\nimport { LoadingContext } from \"../../contexts\";\n\nconst Root = styled.div`\n  min-height: 100vh;\n`;\n\nconst NewPostForm = styled.form`\n  max-width: 600px;\n  margin: 60px auto;\n  padding: 40px 60px;\n  box-shadow: 0px 2px 12px rgba(0, 0, 0, 0.4);\n  border-radius: 10px;\n  background: rgba(246, 246, 246, 0.9);\n  font-size: 18px;\n\n  ${MEDIA_QUERY_MD} {\n    margin: 30px auto;\n  }\n`;\nconst NewPostLable = styled.div`\n  margin: 10px 0;\n  font-size: 20px;\n`;\n\nconst NewPostTitleInput = styled.input`\n  width: 100%;\n  padding: 8px;\n  font-size: 18px;\n  border: 1px solid rgba(0, 0, 0, 0.125);\n  letter-spacing: 1.5px;\n`;\n\nconst NewPostTextArea = styled.textarea`\n  width: 100%;\n  padding: 8px;\n  border: 1px solid rgba(0, 0, 0, 0.125);\n  font-size: 18px;\n  letter-spacing: 1.5px;\n`;\n\nconst NewPostSubmit = styled.div`\n  margin-top: 16px;\n  text-align: center;\n\n  button {\n    color: #ddd;\n    background-color: #343a40;\n    border-radius: 4px;\n    font-size: 16px;\n    padding: 6px 16px;\n    cursor: pointer;\n    border-radius: 20px;\n    border: 1px solid #555;\n    outline: transparent;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  color: #db4c3f;\n  font-weight: 700;\n`;\n\nconst NewPostLoading = styled.div`\n  font-weight: 700;\n  color: #555;\n  padding: 9px;\n`;\n\nexport default function NewPostPage() {\n  const { isLoading, setIsLoading } = useContext(LoadingContext);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n\n  const handleTitleChange = (e) => {\n    setTitle(e.target.value);\n  };\n\n  const handleBodyChange = (e) => {\n    setBody(e.target.value);\n  };\n\n  const handleInputFocus = () => {\n    setErrorMessage(null);\n  };\n\n  const handleTextareaFocus = () => {\n    setErrorMessage(null);\n  };\n\n  const handleNewPostSubmit = (e) => {\n    // 阻止預設的表單發送行為\n    e.preventDefault();\n    setIsLoading(true);\n    addNewPost(title, body)\n      .then((data) => {\n        setIsLoading(false);\n        if (data.ok === 0) {\n          setErrorMessage(data.message);\n          return;\n        }\n        history.push(\"/\");\n      })\n      .catch((err) => {\n        setErrorMessage(err.message);\n      });\n  };\n\n  return (\n    <Root>\n      <NewPostForm onSubmit={handleNewPostSubmit}>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n        <NewPostLable>文章標題</NewPostLable>\n        <NewPostTitleInput\n          value={title}\n          onChange={handleTitleChange}\n          onFocus={handleInputFocus}\n        />\n        <NewPostLable>文章內容</NewPostLable>\n        <NewPostTextArea\n          value={body}\n          onChange={handleBodyChange}\n          onFocus={handleTextareaFocus}\n          rows={14}\n        />\n        <NewPostSubmit>\n          {isLoading ? (\n            <NewPostLoading>發布中...</NewPostLoading>\n          ) : (\n            <button>發布</button>\n          )}\n        </NewPostSubmit>\n      </NewPostForm>\n    </Root>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n// 引入使用 CSS Reset\nimport { Reset } from \"styled-reset\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport { AuthContext, LoadingContext } from \"../../contexts\";\nimport { getMe } from \"../../WebAPI\";\nimport { getAuthToken } from \"../../utils\";\n\nimport img from \"../../imgs/bg_1.jpg\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\nimport {\n  HomePage,\n  NewPostPage,\n  AboutPage,\n  PostListPage,\n  PostPage,\n  RegisterPage,\n  LoginPage,\n} from \"../../pages\";\n\nconst Root = styled.div`\n  font-family: \"monospace\", \"微軟正黑體\";\n  color: #4a4a4a;\n  box-sizing: border-box;\n  height: 100%;\n`;\n\nconst BackgroundImage = styled.div`\n  padding: 100px 10px;\n  background-size: cover;\n  background: url(${img}) center center fixed no-repeat;\n`;\n\nexport default function App() {\n  const [isLoadingGetMe, setLoadingGetMe] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  // user 有東西就代表有登入\n  const [user, setUser] = useState(\"\");\n\n  useEffect(() => {\n    // 以 getAuthToken 從 localStorage 讀取 token\n    if (getAuthToken()) {\n      // 有 token 才 call API\n      getMe().then((response) => {\n        if (response.ok) {\n          setUser(response.data);\n          setLoadingGetMe(false);\n        }\n      });\n    } else {\n      setLoadingGetMe(false);\n    }\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      <Root>\n        <Reset />\n        <BackgroundImage>\n          <LoadingContext.Provider\n            value={{ isLoading, setIsLoading, isLoadingGetMe }}\n          >\n            {/* Router: 包在最外層 */}\n            <Router>\n              {/* 導覽列: 共同區塊 */}\n              <Header />\n              {/* Switch: 確保只會匹配第一個符合網址列的路由 */}\n              <Switch>\n                {/* exact path: 完整匹配 */}\n                <Route exact path=\"/\">\n                  <HomePage />\n                </Route>\n                <Route exact path=\"/about\">\n                  <AboutPage />\n                </Route>\n                <Route exact path=\"/post-list/\">\n                  <PostListPage />\n                </Route>\n                <Route exact path=\"/post/:id\">\n                  <PostPage />\n                </Route>\n                <Route exact path=\"/new-post\">\n                  <NewPostPage />\n                </Route>\n                <Route exact path=\"/register\">\n                  <RegisterPage />\n                </Route>\n                <Route exact path=\"/login\">\n                  <LoginPage />\n                </Route>\n              </Switch>\n            </Router>\n          </LoadingContext.Provider>\n        </BackgroundImage>\n        <Footer />\n      </Root>\n    </AuthContext.Provider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}