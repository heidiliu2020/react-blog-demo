{"version":3,"sources":["component/App/App.js","index.js"],"names":["Page","styled","div","Title","h1","MessageForm","form","MessageLable","MessageTextArea","textarea","SubmitButton","button","MessageList","MessageContainer","MessageHead","MessageAuthor","MessageTime","MessageBody","ErrorMessage","MessageDeleteButton","Loading","Message","author","time","children","handleDeleteMessage","message","onClick","id","App","useState","messages","setMessages","messageApiError","setMessageApiError","value","setValue","postMessageError","setPostMessageError","isLoadingPostMessage","setIsLoadingPostMessage","fetchMessages","fetch","then","res","json","data","catch","err","method","filter","console","log","useEffect","onSubmit","e","preventDefault","headers","body","JSON","stringify","nickname","ok","onChange","target","onFocus","rows","toString","length","map","Date","createdAt","toLocaleString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d494bf0.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\n// Comments API\nconst API_ENDPOINT =\n  \"https://student-json-api.lidemy.me/comments?_sort=createdAt&_order=desc\";\n\nconst Page = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  font-family: \"monospace\", \"微軟正黑體\";\n  box-shadow: 0px 0px 16px rgb(199, 197, 197);\n  border-radius: 8px;\n  padding: 12px 28px;\n  color: #6c6c6c;\n  box-sizing: border-box;\n`;\n\nconst Title = styled.h1`\n  text-align: center;\n`;\n\nconst MessageForm = styled.form`\n  margin: 16px 0;\n  font-size: 18px;\n`;\nconst MessageLable = styled.div``;\n\nconst MessageTextArea = styled.textarea`\n  display: block;\n  margin-top: 8px;\n  width: 95%;\n  border-color: rgba(0, 0, 0, 0.125);\n`;\nconst SubmitButton = styled.button`\n  margin-top: 8px;\n  color: #ddd;\n  background-color: #343a40;\n  border: 1px solid transparent;\n  border-radius: 4px;\n  font-size: 16px;\n  padding: 6px 12px;\n`;\n\nconst MessageList = styled.div`\n  margin-top: 16px;\n`;\nconst MessageContainer = styled.div`\n  border: 1px solid rgba(0, 0, 0, 0.125);\n  padding: 16px;\n  border-radius: 4px;\n\n  & + & {\n    margin-top: 8px;\n  }\n`;\n\nconst MessageHead = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst MessageAuthor = styled.div`\n  margin-right: 12px;\n  color: #232323;\n`;\n\nconst MessageTime = styled.div`\n  margin-right: 12px;\n`;\n\nconst MessageBody = styled.div`\n  margin-top: 8px;\n  word-break: break-all;\n  white-space: pre-line;\n`;\n\nconst ErrorMessage = styled.div`\n  margin-top: 16px;\n  color: #db4c3f;\n`;\n\nconst MessageDeleteButton = styled.button`\n  color: white;\n  background-color: #db4c3f;\n  border: 1px solid transparent;\n  border-radius: 4px;\n  font-size: 16px;\n  padding: 4px 8px;\n`;\n\n// 會遮住整個畫面\nconst Loading = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  color: white;\n  font-size: 30px;\n  // 垂直水平置中\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nfunction Message({ author, time, children, handleDeleteMessage, message }) {\n  return (\n    <MessageContainer>\n      <MessageHead>\n        <MessageAuthor>{author}</MessageAuthor>\n        <MessageTime>{time}</MessageTime>\n        <MessageDeleteButton\n          onClick={() => {\n            handleDeleteMessage(message.id);\n          }}\n        >\n          刪除\n        </MessageDeleteButton>\n      </MessageHead>\n      <MessageBody>{children}</MessageBody>\n    </MessageContainer>\n  );\n}\n\nMessage.propTypes = {\n  author: PropTypes.string,\n  time: PropTypes.string,\n  // 可 render 的參數型別是 node\n  children: PropTypes.node,\n};\n\nfunction App() {\n  const [messages, setMessages] = useState(null);\n  const [messageApiError, setMessageApiError] = useState(null);\n  const [value, setValue] = useState();\n  const [postMessageError, setPostMessageError] = useState();\n  const [isLoadingPostMessage, setIsLoadingPostMessage] = useState(false);\n\n  const fetchMessages = () => {\n    return fetch(API_ENDPOINT)\n      .then((res) => res.json())\n      .then((data) => {\n        setMessages(data);\n      })\n      .catch((err) => {\n        setMessageApiError(err.message);\n      });\n  };\n\n  const handleTextareaChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleTextareaFocus = () => {\n    setPostMessageError(null);\n  };\n\n  const handleFormSubmit = (e) => {\n    // 阻止預設的表單發送行為\n    e.preventDefault();\n    // 若為 true 就直接返回\n    if (isLoadingPostMessage) {\n      return;\n    }\n    // 要發送 API 之前設成 true\n    setIsLoadingPostMessage(true);\n    fetch(\"https://student-json-api.lidemy.me/comments\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        nickname: \"Heidi\",\n        body: value,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        // 收到結果後設成 false\n        setIsLoadingPostMessage(false);\n        // 在顯示訊息前可進行錯誤處理\n        if (data.ok === 0) {\n          setPostMessageError(data.message);\n          return;\n        }\n        setValue(\"\");\n        fetchMessages();\n      })\n      .catch((err) => {\n        setIsLoadingPostMessage(false);\n        setPostMessageError(err.message);\n      });\n  };\n\n  const handleDeleteMessage = (id) => {\n    fetch(\"https://student-json-api.lidemy.me/comments/\" + id, {\n      method: \"DELETE\",\n    })\n      .then((res) => res.json())\n      .then(() => {\n        setMessages(messages.filter((message) => message.id !== id));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  // 第二個參數傳入 [] 代表只在 componet mount 後執行\n  useEffect(() => {\n    fetchMessages();\n  }, []);\n\n  return (\n    <Page>\n      {isLoadingPostMessage && <Loading>Loading...</Loading>}\n      <Title>React 留言板</Title>\n      <MessageForm onSubmit={handleFormSubmit}>\n        <MessageLable>留言內容</MessageLable>\n        <MessageTextArea\n          value={value}\n          onChange={handleTextareaChange}\n          onFocus={handleTextareaFocus}\n          rows={8}\n        />\n        <SubmitButton>送出</SubmitButton>\n        {postMessageError && <ErrorMessage>{postMessageError}</ErrorMessage>}\n      </MessageForm>\n      {messageApiError && (\n        <ErrorMessage>\n          {/* 直接 render object 會出錯，因此需轉成 string */}\n          Something went wrong. {messageApiError.toString()}\n        </ErrorMessage>\n      )}\n      {/* 確認裡面有東西才會執行這一行 */}\n      {messages && messages.length === 0 && <div>No Message</div>}\n      <MessageList>\n        {/* 確認裡面有東西才會執行這一行 */}\n        {messages &&\n          messages.map((message) => (\n            <Message\n              key={message.id}\n              author={message.nickname}\n              time={new Date(message.createdAt).toLocaleString()}\n              handleDeleteMessage={handleDeleteMessage}\n              message={message}\n            >\n              {message.body}\n            </Message>\n          ))}\n      </MessageList>\n    </Page>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./component/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}