{"version":3,"sources":["contexts.js","utils.js","WebAPI.js","imgs/bg.jpg","constants/style.js","components/Header/Header.js","components/Footer/Footer.js","components/Loading/Loading.js","pages/HomePage/HomePage.js","pages/LoginPage/LoginPage.js","pages/RegisterPage/RegisterPage.js","pages/AboutPage/AboutPage.js","components/Pagination/Pagination.js","pages/PostListPage/PostListPage.js","pages/PostPage/PostPage.js","pages/NewPostPage/NewPostPage.js","components/App/App.js","index.js"],"names":["AuthContext","createContext","LoadingContext","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","getLimitPosts","page","limit","fetch","then","res","json","getMe","headers","authorization","MEDIA_QUERY_MD","HeaderContainer","styled","div","Brand","NavbarList","ul","StyledLink","NavLink","props","activeClassName","LoadingGetMe","Header","isLoadingGetMe","useContext","user","setUser","location","useLocation","history","useHistory","to","replace","exact","onClick","pathname","push","Root","FooterContainer","Footer","LoadingWapper","Loading","size","color","PostsListContainer","PostsListTitle","PostContainer","PostHeader","PostTitle","Link","PostDate","PostBody","ReadMore","PostList","post","id","title","Date","createdAt","toLocaleDateString","body","HomePage","isLoading","setIsLoading","useState","posts","setPosts","useEffect","map","LoginForm","form","LoginTitle","LoginInput","LoginSubmit","LinkToRegister","ErrorMessage","LoginPage","username","setUsername","password","setPassword","errorMessage","setErrorMessage","handleInputFocus","onSubmit","e","preventDefault","method","JSON","stringify","login","data","ok","message","response","toString","value","onChange","target","onFocus","type","RegisterForm","RegisterTitle","RegisterInput","RegisterSubmit","LinkToLogin","RegisterPage","nickname","setNickname","register","AboutContainter","AboutTitle","h2","AboutContent","AboutPage","PaginationContainer","PageButton","button","className","Pagination","totalPages","currentPage","setCurrentPage","current","handlePageClick","PostRight","PostDeleteButton","handleDeletePost","PostListPage","useRef","pages","i","getPages","Math","ceil","length","deletePost","filter","catch","err","console","log","PostAuthor","PostPage","setPost","useParams","getPost","toLocaleString","NewPostForm","NewPostLable","NewPostTitleInput","input","NewPostTextArea","textarea","NewPostSubmit","NewPostLoading","NewPostPage","setTitle","setBody","addNewPost","rows","BackgroundImage","img","App","setLoadingGetMe","Provider","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a1b6636.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\n// 初始值為 null\r\nexport const AuthContext = createContext(null);\r\nexport const LoadingContext = createContext(null);\r\n","const TOKEN_NAME = \"token\";\r\n\r\nexport const setAuthToken = (token) => {\r\n  localStorage.setItem(TOKEN_NAME, token);\r\n};\r\n\r\nexport const getAuthToken = () => {\r\n  return localStorage.getItem(TOKEN_NAME);\r\n};\r\n\r\nexport const getPages = (totalPages) => {\r\n  let pages = [];\r\n  for (let i = 1; i <= totalPages; i++) {\r\n    pages.push(i);\r\n  }\r\n  return pages;\r\n};\r\n","import { getAuthToken } from \"./utils\";\r\n\r\nconst BASE_URL = \"https://student-json-api.lidemy.me\";\r\n\r\n// 讀取所有文章\r\nexport const getPosts = () =>\r\n  fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then((res) =>\r\n    res.json()\r\n  );\r\n\r\n// 讀取單篇文章\r\nexport const getPost = (id) =>\r\n  fetch(`${BASE_URL}/posts?id=${id}&_expand=user`).then((res) => res.json());\r\n\r\n// 讀取最新五篇文章\r\nexport const getFirstFivePosts = () =>\r\n  fetch(`${BASE_URL}/posts?_limit=5&_sort=createdAt&_order=desc`).then((res) =>\r\n    res.json()\r\n  );\r\n\r\n// 依照X頁數，讀取Y篇文章\r\nexport const getLimitPosts = (page, limit) =>\r\n  fetch(\r\n    `${BASE_URL}/posts?_page=${page}&_limit=${limit}&_sort=createdAt&_order=desc`\r\n  ).then((res) => res.json());\r\n\r\n// 刪除文章\r\nexport const deletePost = (id) => {\r\n  return fetch(\"https://student-json-api.lidemy.me/posts/\" + id, {\r\n    method: \"DELETE\",\r\n  }).then((res) => res.json());\r\n};\r\n\r\n// 發布文章\r\nexport const addNewPost = (title, body) => {\r\n  // 從 localStorage 拿取 token\r\n  const token = getAuthToken();\r\n  return fetch(`${BASE_URL}/posts`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n      \"content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      title,\r\n      body,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\n// 註冊\r\nexport const register = ({ username, password, nickname }) => {\r\n  return fetch(`${BASE_URL}/register`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      nickname,\r\n      username,\r\n      password,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\n// 登入\r\nexport const login = ({ username, password }) => {\r\n  return fetch(`${BASE_URL}/login`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      username,\r\n      password,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\n// 身分驗證\r\nexport const getMe = () => {\r\n  // 從 localStorage 拿取 token\r\n  const token = getAuthToken();\r\n  return fetch(`${BASE_URL}/me`, {\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n","export default __webpack_public_path__ + \"static/media/bg.96773744.jpg\";","export const MEDIA_QUERY_LG = \"@media screen and (max-width: 1000px)\";\nexport const MEDIA_QUERY_MD = \"@media screen and (max-width: 768px)\";\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { Link, NavLink, useHistory, useLocation } from \"react-router-dom\";\n\nimport { AuthContext, LoadingContext } from \"../../contexts\";\nimport { setAuthToken } from \"../../utils\";\nimport { MEDIA_QUERY_MD } from \"../../constants/style\";\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  box-shadow: 0px 0px 8px rgb(199, 197, 197);\n  padding: 0 32px;\n  background: #fff;\n\n  ${MEDIA_QUERY_MD} {\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n  }\n`;\n\nconst Brand = styled.div`\n  font-size: 28px;\n  margin-right: 20px;\n  white-space: nowrap;\n  font-weight: 700;\n\n  /* 可選取子層的 Link 元素 */\n  a {\n    text-decoration: none;\n    color: #333;\n  }\n\n  ${MEDIA_QUERY_MD} {\n    font-size: 24px;\n    padding: 6px 0;\n  }\n`;\n\nconst NavbarList = styled.ul`\n  display: flex;\n  align-items: center;\n  list-style-type: none;\n  text-decoration: none;\n  margin: 0;\n  padding: 0;\n\n  ${MEDIA_QUERY_MD} {\n    font-size: 24px;\n    justify-content: space-evenly;\n  }\n`;\n\nconst StyledLink = styled(NavLink)`\n  height: 58px;\n  width: 82px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-decoration: none;\n  color: #666;\n\n  /* activeClassName: 設置選中樣式，預設為 active */\n  &.${(props) => props.activeClassName} {\n    background: #eee;\n  }\n\n  ${MEDIA_QUERY_MD} {\n    font-size: 18px;\n    height: 32px;\n\n    &.${(props) => props.activeClassName} {\n      background: #fff;\n      color: #999;\n    }\n  }\n`;\n\nconst LoadingGetMe = styled.div`\n  height: 58px;\n  width: 82px;\n`;\n\nexport default function Header() {\n  const { isLoadingGetMe } = useContext(LoadingContext);\n  const { user, setUser } = useContext(AuthContext);\n  const location = useLocation();\n\n  const history = useHistory();\n\n  const handleLogout = () => {\n    setAuthToken(\"\");\n    setUser(null);\n    if (location.pathname !== \"/\") {\n      history.push(\"/\");\n    }\n  };\n  return (\n    <HeaderContainer>\n      <Brand>\n        {/* 加上 replace: 避免出現錯誤 -> \"Hash history cannot PUSH the same path\" */}\n        <Link to=\"/\" replace>\n          React 部落格\n        </Link>\n      </Brand>\n      <NavbarList>\n        <StyledLink exact to=\"/about\" replace activeClassName=\"active\">\n          關於我\n        </StyledLink>\n        <StyledLink to=\"/post-list/\" replace activeClassName=\"active\">\n          文章列表\n        </StyledLink>\n        {isLoadingGetMe ? (\n          <>\n            <LoadingGetMe></LoadingGetMe>\n            <LoadingGetMe></LoadingGetMe>\n          </>\n        ) : (\n          <>\n            {!user && (\n              <>\n                <StyledLink to=\"/register\" replace activeClassName=\"active\">\n                  註冊\n                </StyledLink>\n                <StyledLink to=\"/login\" replace activeClassName=\"active\">\n                  登入\n                </StyledLink>\n              </>\n            )}\n            {user && (\n              <>\n                <StyledLink to=\"/new-post\" replace activeClassName=\"active\">\n                  發布文章\n                </StyledLink>\n                <StyledLink to=\"\" replace onClick={handleLogout}>\n                  登出\n                </StyledLink>\n              </>\n            )}{\" \"}\n          </>\n        )}\n      </NavbarList>\n    </HeaderContainer>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Root = styled.div``;\n\nconst FooterContainer = styled.div`\n  text-align: center;\n  padding: 8px;\n  letter-spacing: 1px;\n  background: #000;\n  color: #eee;\n`;\n\nexport default function Footer() {\n  return (\n    <Root>\n      <FooterContainer>© 2020 Heidi Powered by React</FooterContainer>\n    </Root>\n  );\n}\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { PuffLoader } from \"react-spinners\";\r\n\r\nconst LoadingWapper = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default function Loading() {\r\n  return (\r\n    <LoadingWapper>\r\n      <PuffLoader size={60} color={\"#4A90E2\"} />\r\n    </LoadingWapper>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nimport { MEDIA_QUERY_MD } from \"../../constants/style\";\nimport { getFirstFivePosts } from \"../../WebAPI\";\nimport { LoadingContext } from \"../../contexts\";\nimport Loading from \"../../components/Loading\";\n\nconst Root = styled.div`\n  min-height: 100vh;\n`;\n\nconst PostsListContainer = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 40px 60px;\n  box-shadow: 0px 2px 12px rgba(0, 0, 0, 0.4);\n  border-radius: 10px;\n  background: rgba(246, 246, 246, 0.9);\n\n  ${MEDIA_QUERY_MD} {\n    margin: 30px auto;\n    padding: 30px;\n  }\n`;\n\nconst PostsListTitle = styled.div`\n  text-align: center;\n  font-size: 30px;\n  font-weight: 700;\n  color: #333;\n`;\n\nconst PostContainer = styled.div`\n  border-bottom: 1px solid rgba(0, 0, 0, 0.15);\n  padding: 20px 0;\n\n  ${MEDIA_QUERY_MD} {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`;\n\nconst PostHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst PostTitle = styled(Link)`\n  font-size: 24px;\n  font-weight: 700;\n  color: #333;\n  text-decoration: none;\n`;\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.5);\n`;\n\nconst PostBody = styled.div`\n  font-size: 20px;\n  letter-spacing: 3px;\n  line-height: 1.5;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 550px;\n  max-height: 100px;\n`;\n\nconst ReadMore = styled.div`\n  margin-top: 24px;\n  text-align: center;\n\n  a {\n    border-radius: 30px;\n    font-size: 16px;\n    padding: 8px 10px;\n    border: 1px solid #555;\n    background: #555;\n    color: #eee;\n    text-decoration: none;\n  }\n`;\n\nfunction PostList({ post }) {\n  return (\n    <PostContainer>\n      <PostHeader>\n        <PostTitle to={`/post/${post.id}`}>\n          [#{post.id}] {post.title}\n        </PostTitle>\n        <PostDate>{new Date(post.createdAt).toLocaleDateString()}</PostDate>\n      </PostHeader>\n      <PostBody>{post.body}</PostBody>\n    </PostContainer>\n  );\n}\n\nPostList.propTypes = {\n  post: PropTypes.object,\n};\n\nexport default function HomePage() {\n  const { isLoading, setIsLoading } = useContext(LoadingContext);\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getFirstFivePosts()\n      .then((posts) => setPosts(posts))\n      .then(() => {\n        setIsLoading(false);\n      });\n  }, [setIsLoading]);\n\n  return (\n    <Root>\n      {isLoading ? (\n        <Loading />\n      ) : (\n        <PostsListContainer>\n          <PostsListTitle>最新文章</PostsListTitle>\n          {posts && posts.map((post) => <PostList post={post} key={post.id} />)}\n          <ReadMore>\n            <Link to=\"/post-list\">查看更多</Link>\n          </ReadMore>\n        </PostsListContainer>\n      )}\n    </Root>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { login, getMe } from \"../../WebAPI\";\nimport { setAuthToken } from \"../../utils\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { AuthContext } from \"../../contexts\";\n\nconst Root = styled.div`\n  height: 100vh;\n`;\n\nconst LoginForm = styled.form`\n  max-width: 350px;\n  margin: 100px auto;\n  padding: 30px 50px;\n  box-shadow: 0px 2px 12px rgba(0, 0, 0, 0.4);\n  border-radius: 6px;\n  background: rgba(246, 246, 246, 0.9);\n  font-size: 18px;\n`;\n\nconst LoginTitle = styled.div`\n  font-size: 28px;\n  font-weight: 700;\n  margin-bottom: 28px;\n  text-align: center;\n`;\n\nconst LoginInput = styled.div`\n  margin-bottom: 28px;\n\n  & input {\n    width: 100%;\n    padding: 8px;\n    font-size: 18px;\n    outline: transparent;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    letter-spacing: 1.5px;\n    margin-top: 8px;\n  }\n`;\n\nconst LoginSubmit = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n\n  & button {\n    background: #555;\n    color: #eee;\n    outline: transparent;\n  }\n\n  & button,\n  a {\n    cursor: pointer;\n    border-radius: 20px;\n    font-size: 18px;\n    padding: 6px 20px;\n    border: 1px solid #555;\n  }\n`;\n\nconst LinkToRegister = styled(Link)`\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  background: #eee;\n  color: #555;\n`;\n\nconst ErrorMessage = styled.div`\n  margin-bottom: 16px;\n  color: #db4c3f;\n  font-weight: 700;\n`;\n\nexport default function LoginPage() {\n  const { setUser } = useContext(AuthContext);\n  // 在 React 中 value 若是 undefined，等同於沒有傳 value\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n\n  // 阻止送出表單\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    login({ username, password }).then((data) => {\n      // 若 ok 為 0 代表錯誤\n      if (data.ok === 0) {\n        return setErrorMessage(data.message);\n      }\n      // 成功的話就把 token 存到 localStorage\n      setAuthToken(data.token);\n\n      getMe().then((response) => {\n        if (response.ok !== 1) {\n          // 在 getMe() 出錯代表還沒成功登入，因此要把 token 清空\n          setAuthToken(null);\n          setErrorMessage(response.toString());\n        }\n        setUser(response.data);\n        // 並導回首頁\n        history.push(\"/\");\n      });\n    });\n  };\n\n  const handleInputFocus = () => {\n    setErrorMessage(null);\n  };\n\n  const handleUsernameChange = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  return (\n    <Root>\n      <LoginForm onSubmit={handleSubmit}>\n        <LoginTitle>登入</LoginTitle>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n        <LoginInput>\n          username:{\" \"}\n          <input\n            value={username}\n            onChange={handleUsernameChange}\n            onFocus={handleInputFocus}\n          />\n        </LoginInput>\n        <LoginInput>\n          password:\n          <input\n            type=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n            onFocus={handleInputFocus}\n          />\n        </LoginInput>\n        <LoginSubmit>\n          <LinkToRegister to=\"/register\">建立帳號</LinkToRegister>\n          <button>登入</button>\n        </LoginSubmit>\n      </LoginForm>\n    </Root>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { register, getMe } from \"../../WebAPI\";\nimport { setAuthToken } from \"../../utils\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { AuthContext } from \"../../contexts\";\n\nconst Root = styled.div`\n  height: 100vh;\n`;\n\nconst RegisterForm = styled.form`\n  max-width: 350px;\n  margin: 100px auto;\n  padding: 30px 50px;\n  box-shadow: 0px 2px 12px rgba(0, 0, 0, 0.4);\n  border-radius: 6px;\n  background: rgba(246, 246, 246, 0.9);\n  font-size: 18px;\n`;\n\nconst RegisterTitle = styled.div`\n  font-size: 28px;\n  font-weight: 700;\n  margin-bottom: 28px;\n  text-align: center;\n`;\n\nconst RegisterInput = styled.div`\n  margin-bottom: 28px;\n\n  & input {\n    width: 100%;\n    padding: 8px;\n    font-size: 18px;\n    outline: transparent;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    letter-spacing: 1.5px;\n    margin-top: 8px;\n  }\n`;\n\nconst RegisterSubmit = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n\n  & button {\n    background: #555;\n    color: #eee;\n    outline: transparent;\n  }\n\n  & button,\n  a {\n    cursor: pointer;\n    border-radius: 20px;\n    font-size: 18px;\n    padding: 6px 20px;\n    border: 1px solid #555;\n  }\n`;\n\nconst LinkToLogin = styled(Link)`\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  background: #eee;\n  color: #555;\n`;\n\nconst ErrorMessage = styled.div`\n  margin-bottom: 16px;\n  color: #db4c3f;\n  font-weight: 700;\n`;\n\nexport default function RegisterPage() {\n  const { setUser } = useContext(AuthContext);\n  // 在 React 中 value 若是 undefined，等同於沒有傳 value\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [nickname, setNickname] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n\n  // 阻止送出表單\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    register({ username, password, nickname }).then((data) => {\n      // 若 ok 為 0 代表錯誤\n      if (data.ok === 0) {\n        return setErrorMessage(data.message);\n      }\n      // 成功的話就把 token 存到 localStorage\n      setAuthToken(data.token);\n\n      getMe().then((response) => {\n        if (response.ok !== 1) {\n          // 在 getMe() 出錯代表還沒成功登入，因此要把 token 清空\n          setAuthToken(null);\n          setErrorMessage(response.toString());\n        }\n        setUser(response.data);\n        // 並導回首頁\n        history.push(\"/\");\n      });\n    });\n  };\n\n  const handleInputFocus = () => {\n    setErrorMessage(null);\n  };\n\n  const handleNicknameChange = (e) => {\n    setNickname(e.target.value);\n  };\n\n  const handleUsernameChange = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  return (\n    <Root>\n      <RegisterForm onSubmit={handleSubmit}>\n        <RegisterTitle>註冊</RegisterTitle>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n        <RegisterInput>\n          nickname:\n          <input\n            value={nickname}\n            onChange={handleNicknameChange}\n            onFocus={handleInputFocus}\n          />\n        </RegisterInput>\n        <RegisterInput>\n          username:\n          <input\n            value={username}\n            onChange={handleUsernameChange}\n            onFocus={handleInputFocus}\n          />\n        </RegisterInput>\n        <RegisterInput>\n          password:\n          <input\n            type=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n            onFocus={handleInputFocus}\n          />\n        </RegisterInput>\n        <RegisterSubmit>\n          <LinkToLogin to=\"/login\">已有帳號</LinkToLogin>\n          <button>註冊</button>\n        </RegisterSubmit>\n      </RegisterForm>\n    </Root>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Root = styled.div`\n  min-height: 100vh;\n`;\n\nconst AboutContainter = styled.div`\n  max-width: 500px;\n  margin: 100px auto;\n  padding: 40px;\n  box-shadow: 0px 2px 12px rgba(0, 0, 0, 0.4);\n  border-radius: 6px;\n  background: rgba(246, 246, 246, 0.9);\n`;\n\nconst AboutTitle = styled.h2`\n  text-align: center;\n  font-size: 28px;\n  font-weight: 700;\n  margin-bottom: 20px;\n`;\n\nconst AboutContent = styled.div`\n  line-height: 1.5;\n  font-size: 20px;\n`;\n\nexport default function AboutPage() {\n  return (\n    <Root>\n      <AboutContainter>\n        <AboutTitle>關於我</AboutTitle>\n        <AboutContent>\n          <p>\n            嗨，我是\n            Heidi，和阿爾卑斯山上的海蒂同名，夢想是走遍世界各處，留下自己的腳印。\n          </p>\n          <p>\n            因緣際會之下，從 2020 年 3 月開始學習寫程式，目前是 Lidemy\n            程式導師計畫第四期的學生，目標在明年初成功轉職成為一名前端工程師。\n          </p>\n        </AboutContent>\n      </AboutContainter>\n    </Root>\n  );\n}\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { getLimitPosts } from \"../../WebAPI\";\r\n\r\nconst Root = styled.div``;\r\n\r\nconst PaginationContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 8px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst PageButton = styled.button`\r\n  border: 1px solid #555;\r\n  border-radius: 50%;\r\n  padding: 8px 12px;\r\n  font-size: 16px;\r\n  outline: transparent;\r\n  cursor: pointer;\r\n  margin-right: 4px;\r\n\r\n  background: ${(props) =>\r\n    props.className === \"selected\"\r\n      ? \"rgba(0, 0, 0, 0.5)\"\r\n      : \"rgba(0, 0, 0, 0.1)\"};\r\n  color: ${(props) =>\r\n    props.className === \"selected\" ? \"#eee\" : \"rgba(0, 0, 0, 0.5)\"};\r\n\r\n  &:hover {\r\n    background: rgba(0, 0, 0, 0.5);\r\n    color: #eee;\r\n  }\r\n`;\r\n\r\nexport default function Pagination({\r\n  setPosts,\r\n  limit,\r\n  totalPages,\r\n  currentPage,\r\n  setCurrentPage,\r\n}) {\r\n  const handlePageClick = (page) => {\r\n    getLimitPosts(page, limit).then((posts) => setPosts(posts));\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  return (\r\n    <Root>\r\n      <PaginationContainer>\r\n        {totalPages.current &&\r\n          totalPages.current.map((page) => (\r\n            <PageButton\r\n              key={page}\r\n              onClick={() => handlePageClick(page)}\r\n              className={currentPage === page ? \"selected\" : \"\"}\r\n            >\r\n              {page}\r\n            </PageButton>\r\n          ))}\r\n      </PaginationContainer>\r\n    </Root>\r\n  );\r\n}\r\n\r\nPagination.propTypes = {\r\n  setPosts: PropTypes.func,\r\n  limit: PropTypes.number,\r\n  totalPages: PropTypes.object,\r\n  currentPage: PropTypes.number,\r\n  setCurrentPage: PropTypes.func,\r\n};\r\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { MEDIA_QUERY_MD } from \"../../constants/style\";\r\nimport { getPosts, getLimitPosts, deletePost } from \"../../WebAPI\";\r\nimport { getPages } from \"../../utils\";\r\nimport Pagination from \"../../components/Pagination\";\r\nimport { LoadingContext } from \"../../contexts\";\r\nimport Loading from \"../../components/Loading\";\r\n\r\nconst Root = styled.div`\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst PostsListContainer = styled.div`\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 40px 60px;\r\n  box-shadow: 0px 2px 12px rgba(0, 0, 0, 0.4);\r\n  border-radius: 10px;\r\n  background: rgba(246, 246, 246, 0.9);\r\n`;\r\n\r\nconst PostsListTitle = styled.div`\r\n  text-align: center;\r\n  font-size: 30px;\r\n  font-weight: 700;\r\n  color: #333;\r\n`;\r\n\r\nconst PostContainer = styled.div`\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.15);\r\n  padding: 30px 0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-weight: 700;\r\n\r\n  ${MEDIA_QUERY_MD} {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n  }\r\n`;\r\n\r\nconst PostTitle = styled(Link)`\r\n  font-size: 24px;\r\n  color: #333;\r\n  text-decoration: none;\r\n\r\n  ${MEDIA_QUERY_MD} {\r\n    margin-bottom: 8px;\r\n  }\r\n`;\r\n\r\nconst PostRight = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst PostDate = styled.div`\r\n  color: rgba(0, 0, 0, 0.5);\r\n  margin-left: 8px;\r\n`;\r\n\r\nconst PostDeleteButton = styled.button`\r\n  color: white;\r\n  background-color: #db4c3f;\r\n  border: 1px solid transparent;\r\n  border-radius: 20px;\r\n  font-size: 14px;\r\n  width: 46px;\r\n  height: 26px;\r\n  cursor: pointer;\r\n`;\r\n\r\nfunction PostList({ post, handleDeletePost }) {\r\n  return (\r\n    <PostContainer>\r\n      <PostTitle to={`/post/${post.id}`}>\r\n        [#{post.id}] {post.title}\r\n      </PostTitle>\r\n      <PostRight>\r\n        <PostDeleteButton\r\n          onClick={() => {\r\n            handleDeletePost(post.id);\r\n          }}\r\n        >\r\n          刪除\r\n        </PostDeleteButton>\r\n        <PostDate>{new Date(post.createdAt).toLocaleDateString()}</PostDate>\r\n      </PostRight>\r\n    </PostContainer>\r\n  );\r\n}\r\n\r\nPostList.propTypes = {\r\n  post: PropTypes.object,\r\n  handleDeletePost: PropTypes.func,\r\n};\r\n\r\nexport default function PostListPage() {\r\n  const { isLoading, setIsLoading } = useContext(LoadingContext);\r\n  const [posts, setPosts] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const totalPages = useRef();\r\n  const limit = 5;\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    getPosts().then((posts) => {\r\n      totalPages.current = getPages(Math.ceil(posts.length / limit));\r\n    });\r\n    getLimitPosts(1, limit)\r\n      .then((posts) => setPosts(posts))\r\n      .then(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }, [setIsLoading]);\r\n\r\n  const handleDeletePost = (id) => {\r\n    setIsLoading(true);\r\n    deletePost(id)\r\n      .then(() => {\r\n        setPosts(posts.filter((post) => post.id !== id));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .then(setIsLoading(false));\r\n  };\r\n\r\n  return (\r\n    <Root>\r\n      {isLoading ? (\r\n        <Loading />\r\n      ) : (\r\n        <PostsListContainer>\r\n          <PostsListTitle>文章列表</PostsListTitle>\r\n          {posts.map((post) => (\r\n            <PostList\r\n              post={post}\r\n              key={post.id}\r\n              handleDeletePost={handleDeletePost}\r\n            />\r\n          ))}\r\n          <Pagination\r\n            totalPages={totalPages}\r\n            limit={limit}\r\n            setPosts={setPosts}\r\n            currentPage={currentPage}\r\n            setCurrentPage={setCurrentPage}\r\n          />\r\n        </PostsListContainer>\r\n      )}\r\n    </Root>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { MEDIA_QUERY_MD } from \"../../constants/style\";\r\nimport { getPost } from \"../../WebAPI\";\r\nimport { LoadingContext } from \"../../contexts\";\r\nimport Loading from \"../../components/Loading\";\r\n\r\nconst Root = styled.div`\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst PostContainer = styled.div`\r\n  padding: 60px;\r\n  max-width: 900px;\r\n  margin: 00px auto;\r\n  box-shadow: 0px 2px 12px rgba(0, 0, 0, 0.4);\r\n  border-radius: 6px;\r\n  background: rgba(246, 246, 246, 0.9);\r\n\r\n  ${MEDIA_QUERY_MD} {\r\n    padding: 40px 20px;\r\n  }\r\n`;\r\n\r\nconst PostTitle = styled.div`\r\n  font-size: 36px;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst PostHeader = styled.div`\r\n  margin: 16px 0;\r\n  padding: 8px 0;\r\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\r\n  font-size: 16px;\r\n  color: rgba(0, 0, 0, 0.4);\r\n\r\n  & div {\r\n    margin-top: 8px;\r\n  }\r\n`;\r\n\r\nconst PostAuthor = styled.div``;\r\n\r\nconst PostDate = styled.div``;\r\n\r\nconst PostBody = styled.div`\r\n  font-size: 20px;\r\n  letter-spacing: 3px;\r\n  line-height: 1.5;\r\n  word-break: break-all;\r\n  white-space: pre-line;\r\n`;\r\n\r\nexport default function PostPage() {\r\n  const { isLoading, setIsLoading } = useContext(LoadingContext);\r\n  const [post, setPost] = useState(null);\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    getPost(id)\r\n      .then((post) => setPost(post[0]))\r\n      .then(() => setIsLoading(false));\r\n  }, [setIsLoading]);\r\n\r\n  return (\r\n    <Root>\r\n      {isLoading ? (\r\n        <Loading />\r\n      ) : (\r\n        <PostContainer>\r\n          {/* post &&: 確認陣列裡面有東西才會執行 */}\r\n          <PostTitle>{post && post.title}</PostTitle>\r\n          <PostHeader>\r\n            <PostAuthor>作者：{post && post.user.username}</PostAuthor>\r\n            <PostDate>\r\n              時間：{post && new Date(post.createdAt).toLocaleString()}\r\n            </PostDate>\r\n          </PostHeader>\r\n          <PostBody>{post && post.body}</PostBody>\r\n        </PostContainer>\r\n      )}\r\n    </Root>\r\n  );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { MEDIA_QUERY_MD } from \"../../constants/style\";\r\nimport { addNewPost } from \"../../WebAPI\";\r\nimport { LoadingContext } from \"../../contexts\";\r\n\r\nconst Root = styled.div`\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst NewPostForm = styled.form`\r\n  max-width: 600px;\r\n  margin: 60px auto;\r\n  padding: 40px 60px;\r\n  box-shadow: 0px 2px 12px rgba(0, 0, 0, 0.4);\r\n  border-radius: 10px;\r\n  background: rgba(246, 246, 246, 0.9);\r\n  font-size: 18px;\r\n\r\n  ${MEDIA_QUERY_MD} {\r\n    margin: 30px auto;\r\n  }\r\n`;\r\nconst NewPostLable = styled.div`\r\n  margin: 10px 0;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst NewPostTitleInput = styled.input`\r\n  width: 100%;\r\n  padding: 8px;\r\n  font-size: 18px;\r\n  border: 1px solid rgba(0, 0, 0, 0.125);\r\n  letter-spacing: 1.5px;\r\n`;\r\n\r\nconst NewPostTextArea = styled.textarea`\r\n  width: 100%;\r\n  padding: 8px;\r\n  border: 1px solid rgba(0, 0, 0, 0.125);\r\n  font-size: 18px;\r\n  letter-spacing: 1.5px;\r\n`;\r\n\r\nconst NewPostSubmit = styled.div`\r\n  margin-top: 16px;\r\n  text-align: center;\r\n\r\n  button {\r\n    color: #ddd;\r\n    background-color: #343a40;\r\n    border-radius: 4px;\r\n    font-size: 16px;\r\n    padding: 6px 16px;\r\n    cursor: pointer;\r\n    border-radius: 20px;\r\n    border: 1px solid #555;\r\n    outline: transparent;\r\n  }\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: #db4c3f;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst NewPostLoading = styled.div`\r\n  font-weight: 700;\r\n  color: #555;\r\n`;\r\n\r\nexport default function NewPostPage() {\r\n  const { isLoading, setIsLoading } = useContext(LoadingContext);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState();\r\n  const history = useHistory();\r\n\r\n  const handleTitleChange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const handleBodyChange = (e) => {\r\n    setBody(e.target.value);\r\n  };\r\n\r\n  const handleInputFocus = () => {\r\n    setErrorMessage(null);\r\n  };\r\n\r\n  const handleTextareaFocus = () => {\r\n    setErrorMessage(null);\r\n  };\r\n\r\n  const handleNewPostSubmit = (e) => {\r\n    // 阻止預設的表單發送行為\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    addNewPost(title, body)\r\n      .then((data) => {\r\n        setIsLoading(false);\r\n        if (data.ok === 0) {\r\n          setErrorMessage(data.message);\r\n          return;\r\n        }\r\n        history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        setErrorMessage(err.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Root>\r\n      <NewPostForm onSubmit={handleNewPostSubmit}>\r\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n        <NewPostLable>文章標題</NewPostLable>\r\n        <NewPostTitleInput\r\n          value={title}\r\n          onChange={handleTitleChange}\r\n          onFocus={handleInputFocus}\r\n        />\r\n        <NewPostLable>文章內容</NewPostLable>\r\n        <NewPostTextArea\r\n          value={body}\r\n          onChange={handleBodyChange}\r\n          onFocus={handleTextareaFocus}\r\n          rows={14}\r\n        />\r\n        <NewPostSubmit>\r\n          {isLoading ? (\r\n            <NewPostLoading>發布中...</NewPostLoading>\r\n          ) : (\r\n            <button>發布</button>\r\n          )}\r\n        </NewPostSubmit>\r\n      </NewPostForm>\r\n    </Root>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n// 引入使用 CSS Reset\nimport { Reset } from \"styled-reset\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport { AuthContext, LoadingContext } from \"../../contexts\";\nimport { getMe } from \"../../WebAPI\";\nimport { getAuthToken } from \"../../utils\";\n\nimport img from \"../../imgs/bg.jpg\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\nimport {\n  HomePage,\n  NewPostPage,\n  AboutPage,\n  PostListPage,\n  PostPage,\n  RegisterPage,\n  LoginPage,\n} from \"../../pages\";\n\nconst Root = styled.div`\n  font-family: \"monospace\", \"微軟正黑體\";\n  color: #4a4a4a;\n  box-sizing: border-box;\n  height: 100%;\n`;\n\nconst BackgroundImage = styled.div`\n  padding: 100px 10px;\n  background-size: cover;\n  background: url(${img}) center center fixed no-repeat;\n`;\n\nexport default function App() {\n  // user 有東西就代表有登入\n  const [user, setUser] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoadingGetMe, setLoadingGetMe] = useState(true);\n  console.log(user);\n  useEffect(() => {\n    // 以 getAuthToken 從 localStorage 讀取 token\n    if (getAuthToken()) {\n      // 有 token 才 call API\n      getMe().then((response) => {\n        if (response.ok) {\n          setUser(response.data);\n          setLoadingGetMe(false);\n        }\n      });\n    }\n    setLoadingGetMe(false);\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      <Root>\n        <Reset />\n        <LoadingContext.Provider\n          value={{ isLoading, setIsLoading, isLoadingGetMe }}\n        >\n          <BackgroundImage>\n            {/* Router: 包在最外層 */}\n            <Router>\n              {/* 導覽列: 共同區塊 */}\n              <Header />\n              {/* Switch: 確保只會匹配第一個符合網址列的路由 */}\n              <Switch>\n                {/* exact path: 完整匹配 */}\n                <Route exact path=\"/\">\n                  <HomePage />\n                </Route>\n                <Route exact path=\"/about\">\n                  <AboutPage />\n                </Route>\n                <Route exact path=\"/post-list/\">\n                  <PostListPage />\n                </Route>\n                <Route exact path=\"/post/:id\">\n                  <PostPage />\n                </Route>\n                <Route exact path=\"/new-post\">\n                  <NewPostPage />\n                </Route>\n                <Route exact path=\"/register\">\n                  <RegisterPage />\n                </Route>\n                <Route exact path=\"/login\">\n                  <LoginPage />\n                </Route>\n              </Switch>\n            </Router>\n          </BackgroundImage>\n        </LoadingContext.Provider>\n        <Footer />\n      </Root>\n    </AuthContext.Provider>\n  );\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}